{
    "collab_server" : "",
    "contents" : "## app\n\n# This is the user-interface definition and the server logic of a Shiny web application.\n# You can find out more about building applications with Shiny here:\n#\n# http://shiny.rstudio.com\n#\n\n#load packages\nlibrary(shiny)\n\n# Helper Functions\n##############################\n\n\ntext <- c(\"Hi there! A technical defect on 05/02/2016 caused a TV set to ignite and set fire to parts of the living room. The fire could be extinguished, but parts of my living room are completely damaged. Kind regards, John Doe\"\n          , \"Hi there! I just realized today that my Toyota shows some damage in the back right. My insurance policy number is 123456789. What do you need from me? Kind regards, John Smith\"\n          , \"Hi there! When my friend Julia Smith moved in, I unfortunately dropped my friend's TV. It is broken. Can you help me? My policy number is 987654321. Kind regards, Jane Doe\"\n)\n\n\nclass <- c(\"Household\", \"Car\", \"Other\")\nchatbot <- c(\"Thank you for your message. Is it possible that you send us your insurance-ID?\", \"Thank you for using this opportunity to inform us. Please upload an image of the damage!\", \"Thank you for your message. One of our experts will contact you shortly.\")\nd.messages <- as.data.frame(class)\nd.messages$message <- text\nd.messages$chatbot <- chatbot\n\nfirst <- c(\"John\", \"John\", \"Jane\")\nlast <- c(\"Doe\", \"Smith\", \"Doe\")\n\nstreet <- c(\"St. Peterhofstatt 2\",  \"Grossmuensterplatz\", \"Raemistrasse 101\")\ncity <- c(\"8001 Zurich\", \"8001 Zurich\", \"8092 Zurich\")\ncountry <- c(\"Switzerland\", \"Switzerland\", \"Switzerland\")\nphone <- c( \"+41 79 555 55 55\", \"079 111 11 11\", \"077 333 33 33\")\nbirthdate <- c(\"02.04.1978\", \"12.12.1987\", \"03.07.1980\" )\n\nd.user <- data.frame(first)\nd.user$last <- last\nd.user$street <- street\nd.user$city <- city\nd.user$country <- country\nd.user$phone <- phone\nd.user$birthdate <- birthdate\n\n\npolicy_split <- function(text){\n    split1 <-  strsplit(text, split='policy number is ')[[1]][2]\n    split2 <- strsplit(split1, split = '. ')[[1]][1]\n    \n    if (length(strsplit(split2, split =\"\")[[1]])== 9){\n        return(split2)\n    } else {\n        return(\"Please verify the policy number!\")\n    }\n    \n    \n}\n\nfirst_split <- function(usertext){\n    split1 <-  strsplit(usertext, split='Kind regards, ')[[1]][2]\n    split2 <- strsplit(split1, split = ' ')[[1]][1]\n    return(split2)\n}\nlast_split <- function(usertext){\n    split1 <-  strsplit(usertext, split='Kind regards, ')[[1]][2]\n    split2 <- strsplit(split1, split = ' ')[[1]][2]\n    return(split2)\n}\n\n\ndata_user <- function(policy){\n    if (policy == \"123123123\"){\n        street <- d.user$street[1]\n        city <- d.user$city[1]\n        country <- d.user$country[1]\n        phone <- d.user$phone[1]\n        birthdate <- d.user$birthdate[1]\n    } else{\n        if (policy == \"123456789\"){\n            street <- d.user$street[2]\n            city <- d.user$city[2]\n            country <- d.user$country[2]\n            phone <- d.user$phone[2]\n            birthdate <- d.user$birthdate[2]\n        }\n        else{\n            if (policy == \"987654321\"){\n                street <- d.user$street[3]\n                city <- d.user$city[3]\n                country <- d.user$country[3]\n                phone <- d.user$phone[3]\n                birthdate <- d.user$birthdate[3]\n            }\n            else{\n                street <- \"not found\"\n                city <- \"not found\"\n                country <- \"not found\"\n                phone <- \"not found\"\n                birthdate <- \"not found\"\n            }\n            \n        }}\n    return(c(street, city, country, phone, birthdate))\n}\n\n\n# User Interface \n##############################\n\nui <- fluidPage(\n    tags$style(paste0(\n        \"body:before { \",\n        \"  content: ''; \",\n        \"  height: 100%; width: 100%; \",\n        \"  position: fixed; \",\n        \"  z-index: -1; \",\n        \"  background: url('phone.png') no-repeat 25% center fixed; \",\n        \"  background-size: 55%; \",\n        \"  filter: grayscale(100%); \",\n        \"  -webkit-filter: grayscale(100%); }\")),\n    \n    fluidRow(\n        \n        column(3,\n               \n               tags$h1(htmlOutput(\"customer\", inline = FALSE)),\n               wellPanel(style=\"border-color: #8b8b8b; background-color: darkorange\",\n                         radioButtons(inputId = \"button\", label = \"Cases\", choices = d.messages$class)),\n               wellPanel(style=\"border-color: #8b8b8b; background-color: darkorange\",\n                         textInput(inputId = \"user\", label=\"Text chosen\"),\n                         tags$h4(textOutput(\"txt\", inline = FALSE)),\n                         \n                         actionButton(inputId = \"send\", label = \"Send\")),\n               wellPanel( style=\"border-color: #8b8b8b; background-color: darkorange\", \n                          actionButton(inputId = \"uploadimage\", label = \"Upload Image\")\n                          \n               )),\n        column(3,\n               tags$h1(htmlOutput(\"bot\", inline = FALSE)),\n               \n               wellPanel(style=\"border-color: #8b8b8b; background-color: darkorange\",\n                         \n                         \n                         tags$h4(textOutput(\"chatbot\", inline = FALSE))\n               )),\n        \n        column(6, tags$h1( htmlOutput(\"insurance\", inline = FALSE)),\n               \n               wellPanel( \n                   tags$h4(htmlOutput(\"form\", inline = FALSE)),\n                   tags$hr(),\n                   fluidRow (\n                       column (6, tags$h4(htmlOutput(\"class\", inline = FALSE))),\n                       column (6, \n                               uiOutput(outputId = \"realimage\"))\n                   ),\n                   \n                   tags$hr(),\n                   tags$h5(htmlOutput(\"name\", inline = FALSE)),\n                   \n                   \n                   fluidRow(\n                       column(3, textInput(inputId = \"first\", label=\"First\", value = \"\")),\n                       column(3, textInput(inputId = \"last\", label=\"Last\", value = \"\")),\n                       column (6, textAreaInput(inputId = \"textarea\", label = \"Comments\", rows=5, width = 175))),\n                   \n                   textInput(inputId = \"policynumber\", label=\"Policy number\", value = \"\"),\n                   htmlOutput(\"address\", inline = FALSE),\n                   textInput(inputId = \"street\", label=\"\", value = \"\"),\n                   textInput(inputId = \"city\", label=\"\", value = \"\"),\n                   textInput(inputId = \"country\", label=\"\", value = \"\"),\n                   textInput(inputId = \"phone\", label=\"Phone\", value = \"\"),\n                   textInput(inputId = \"email\", label=\"E-Mail\", value = \"\"),\n                   textInput(inputId = \"birthdate\", label=\"Birth Date\", value = \"\")\n               ))\n    )\n)\n\n# Server with app logic\n##############################\n\nserver <- function(input, output, session){\n    \n    output$customer<- renderUI({ HTML(\"<b>Customer \") })\n    output$txt <- renderText({ input$user })\n    \n    output$bot <- renderUI({ HTML(\"<b>Chat bot \") })\n    output$chatbot <- renderText(\"Welcome! Please describe your problem.\")\n    output$insurance <- renderUI({ HTML(\"<b>Insurance company\") })\n    output$form <- renderUI({ HTML(\"<b>Form\") })\n    output$name <- renderUI({ HTML(\"<b>Name\") })\n    output$address <- renderUI({ HTML(\"<b>Address\") })\n    \n    observe({\n        input$button\n        \n        updateTextInput(session, inputId = \"user\", label=\"Text chosen\", value =  d.messages[which(d.messages$class == input$button), 2 ] )\n    })\n    \n    \n    output$realimage <- renderUI({\n        \n        tags$img(src = \"photo.png\", height = 120, width = 170)\n        \n    })\n    \n    observeEvent(input$send, {\n        \n        output$chatbot <- renderText({\n            input$send \n            \n            isolate(\n                if (input$user == d.messages[1,2]){\n                    \n                    d.messages[1, 3]\n                    \n                }\n                else{if (input$user == d.messages[2,2]){\n                    d.messages[2, 3]\n                } else { if (input$user == d.messages[3,2]){\n                    d.messages[3, 3]\n                } else { if (input$user == \"Yes, of course. My insurance policy number is 123123123. Kind regards, John Doe\"){\n                    \"Thank you. We will process your claim.\"\n                } else {\n                    \"Sorry, I do not understand you.\"\n                }\n                    \n                    \n                    \n                    \n                }\n                }\n                    \n                }\n            )\n            \n        })\n        \n        if (input$user == d.messages[1,2]){\n            \n            updateTextInput(session, inputId = \"user\", label=\"Text chosen\", value = \"Yes, of course. My insurance policy number is 123123123. Kind regards, John Doe\" )\n            \n        }\n        \n        output$class <- renderUI({ \n            input$send\n            isolate( tags$h3(HTML( input$button )) )\n            \n        })\n        \n        output$realimage <- renderUI({ \n            input$uploadimage\n            isolate( tags$img(src = \"photo.png\", height = 120, width = 170) )\n            \n        })\n        \n        \n        updateTextInput(session, inputId = \"last\", value = last_split(input$user))\n        updateTextInput(session, inputId = \"first\",  value = first_split(input$user))\n        \n        updateTextInput(session, inputId = \"policynumber\",  value = policy_split(input$user))\n        updateTextInput(session, inputId = \"street\",  value = data_user(policy_split(input$user))[1])\n        updateTextInput(session, inputId = \"city\",  value = data_user(policy_split(input$user))[2])\n        updateTextInput(session, inputId = \"country\",  value = data_user(policy_split(input$user))[3])\n        updateTextInput(session, inputId = \"phone\",  value = data_user(policy_split(input$user))[4])\n        updateTextInput(session, inputId = \"email\",  value = paste0(first_split(input$user),last_split(input$user), \"@company.com\"))\n        updateTextInput(session, inputId = \"birthdate\",  value = data_user(policy_split(input$user))[5])\n    })\n    \n    observeEvent( input$uploadimage, {\n        \n        \n        \n        output$realimage <- renderUI({\n            input$uploadimage\n            isolate(if (policy_split(input$user) == \"123456789\"){\n                tags$img(src = \"cardamage.png\", heigt = 100, width = 170)\n            } else { if ((policy_split(input$user) == \"987654321\")){\n                tags$img(src = \"TV.png\", height = 120, width = 170)\n            } else  { if ((policy_split(input$user) == \"123123123\")){\n                tags$img(src = \"desk.png\", height = 120, width = 170)\n            } else {\n                tags$img(src = \"photo.png\", height = 120, width = 170)\n            }\n                \n            }\n                \n            }\n            )\n        })\n        \n        \n        \n        output$chatbot <- renderText({\n            input$uploadimage\n            \n            isolate(\n                if (input$user == d.messages[2,2]){\n                    \"Picture 'damage.png' was uploaded. One of our experts will contact you shortly.\"\n                    \n                    \n                }\n                else{ \"You have uploaded a picture!\"\n                } \n                \n                \n                \n            )\n            \n        })\n    })\n    \n    \n}\n\n\nshinyApp(ui = ui, server = server)",
    "created" : 1512465711952.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "484311412",
    "id" : "CFD7AFA9",
    "lastKnownWriteTime" : 1512649996,
    "last_content_update" : 1512649996865,
    "path" : "~/02_Projekte/03_FWD/Show-Case/FWD_test/app.R",
    "project_path" : "app.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}