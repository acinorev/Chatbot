# d.claims1 <- read.csv("../data/data_self_produced.csv",header = TRUE, sep = ",")
d.claims1 <- read.csv("data_self_produced3.csv",header = TRUE, sep = ",")
#d.claims2 <- read.csv("../data/names.csv",header = TRUE, sep = ",")
d.claims2 <- read.csv("names.csv",header = TRUE, sep = ",")
d.claims2 <- d.claims2[,3:5]
d.claims2 <- na.omit(d.claims2)
d.claims2 <- d.claims2[d.claims2$Age >= 20,]
names <- as.character(d.claims2[,1])
names_split <- strsplit(names, ", ")
last <- numeric(271)
names2 <- numeric(271)
for (i in 1:271){
last[i] <- names_split[[i]][1]
names2[i] <- names_split[[i]][2]
}
names_split2 <-  strsplit(names2, " ")
first <- numeric(271)
honorific_title <- numeric(271)
for (i in 1:271){
honorific_title[i] <- names_split2[[i]][1]
first[i] <- names_split2[[i]][2]
}
d.claims2$First <- first
d.claims2$Last <- last
d.claims2$Honorific_title <- honorific_title
d.claims2 <- d.claims2[1:20,]
d.claims1 <- read.csv("data_self_produced3.csv",header = TRUE, sep = ",")
d.claims2 <- read.csv("names.csv",header = TRUE, sep = ",")
d.claims1 <- read.csv("data_self_produced.csv",header = TRUE, sep = ",")
d.claims2 <- read.csv("names.csv",header = TRUE, sep = ",")
d.claims2 <- read.csv("names.csv",header = TRUE, sep = ",")
d.claims2 <- d.claims2[,3:5]
d.claims2 <- na.omit(d.claims2)
d.claims2 <- d.claims2[d.claims2$Age >= 20,]
names <- as.character(d.claims2[,1])
names_split <- strsplit(names, ", ")
last <- numeric(271)
names2 <- numeric(271)
for (i in 1:271){
last[i] <- names_split[[i]][1]
names2[i] <- names_split[[i]][2]
}
names_split2 <-  strsplit(names2, " ")
first <- numeric(271)
honorific_title <- numeric(271)
for (i in 1:271){
honorific_title[i] <- names_split2[[i]][1]
first[i] <- names_split2[[i]][2]
}
d.claims2$First <- first
d.claims2$Last <- last
d.claims2$Honorific_title <- honorific_title
d.claims2 <- d.claims2[1:20,]
d.claims <- d.claims1
d.claims$class <- as.factor(class)
d.claims$First <- as.factor(d.claims2$First)
d.claims$Last <- as.factor(d.claims2$Last)
d.claims$Honorific_title <- as.factor(d.claims2$Honorific_title)
d.claims$Age <- d.claims2$Age
d.claims$Sex <- d.claims2$Sex
claims.test <- d.claims[8,]
View(claims.test)
shiny::runApp()
shiny::runApp()
runApp()
runApp()
??uiOutput
??img
install.packages("shinythemes")
runApp()
install.packages("shinyjs")
runApp()
street <- c("St. Peterhofstatt 2",  "Grossmuensterplatz", "Raemistrasse 101")
city <- c("8001 Zurich", "8001 Zurich", "8092 Zurich")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp('~/02_Projekte/03_FWD/Show-Case/Chatbot/App v1')
runApp()
runApp()
runApp()
runApp('~/02_Projekte/03_FWD/Show-Case/Chatbot/App v1')
runApp('~/02_Projekte/03_FWD/Show-Case/Chatbot/App v1')
runApp('~/02_Projekte/03_FWD/Show-Case/Chatbot/App v1')
runApp()
runApp('~/02_Projekte/03_FWD/Show-Case/Chatbot/App v1')
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
cars
shiny::runApp('~/02_Projekte/03_FWD/Show-Case/Chatbot/App v1')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
### read in household articles, cars and body part data ###
setwd("~/02_Projekte/03_FWD/Show-Case/data")
d.household <- read.csv("householdarticles.csv",header = TRUE, sep = ",")
d.cars <- read.csv("cars.csv",header = TRUE, sep = ",")
d.bodypart <- read.csv("bodyparts.csv",header = TRUE, sep = ",")
#for tetecting repeats
repeat.fct <- function(d.data){
# if everywhere 1: goog
# if a 2 or higher the expression is repeated
count <- numeric(length(d.data[,1]))
for (i in 1:length(d.data[,1])){
for ( j in 1:length(d.data[,1])){
if (d.data[i,1] == d.data[j,1]){
count[i] <- count[i] +1
}
}
}
return(count)
}
household <- as.character(d.household$household)
cars <- as.character(d.cars$car.names)
bodypart <- as.character(d.bodypart$bodypart)
# 20 signal words
signal.household <- c("household", "plant", "lock" ,"vandalism", "storm","hail", "burglary", "robbery", "fire", "water", "flood", "earthquake", "broke", "living", "dining", "kitchen",  "room", "hallways", "attic", "basement", "home", "cloth", "stolen" )
signal.car <- c("car", "tire", "tyre", "wheel", "front", "back", "parked", "light", "parking", "lot", "driving", "mirror", "crash", "SUV", "van", "cruiser", "auto", "limousine", "garage", "axles")
signal.bodypart <- c("health", "medicine", "body", "sprain", "sport", "brain", "injury", "trauma", "violation", "ill", "hospital", "medical", "ambulance","evacuation", "accident", "domestic", "surgery", "doctor", "therapy", "care")
household <- append(household,signal.household)
car <- append(cars, signal.car)
health <- append(bodypart, signal.bodypart)
text <- c("Hi there! A technical defect on 05/02/2016 caused a TV set to ignite and set fire to parts of the living room. The fire could be extinguished, but parts of my living room are completely damaged. Kind regards, John Doe"
, "Hi there! I just realized today that my Toyota shows some damage in the back right. My insurance policy number is 123456789. What do you need from me? Kind regards, John Smith"
, "Hi there! When my friend Julia Smith moved in, I unfortunately dropped my friend's TV. It is broken. Can you help me? My policy number is 987654321. Kind regards, Jane Doe"
)
class <- c("Household", "Car", "Health", "Others")
usermessage <- text[1]
# usermessage <- "Hi there, the police is parking at the mcdoof"
### PREDICTION ##########
## helper functions ##
vec_hit <- function(param.class, usermessage){
vector <- sapply(param.class, grepl, usermessage)
for (i in 1: length(param.class)){
if (vector [i] == TRUE){
vector[i] <- 1
} else {
vector[i] <- 0
}
}
return(vector)
}
numb_hit <- function(param.class, usermessage){
return(sum(vec_hit(param.class, usermessage)))
}
hits <- c(numb_hit(household, usermessage),numb_hit(car, usermessage), numb_hit(health, usermessage))
max_hit <- max(numb_hit(household, usermessage), numb_hit(health, usermessage), numb_hit(car, usermessage))
numb_hit(household, usermessage)
numb_hit(car, usermessage)
numb_hit(health, usermessage)
classification <- class[which( hits ==  max_hit)]
if (-2 < diff(hits) && diff(hits) < 2){
print("Others")
} else {
print(classification)
}
usermessage <- text[2]
## Anzahl Treffer ##
hits <- c(numb_hit(household, usermessage),numb_hit(car, usermessage), numb_hit(health, usermessage))
max_hit <- max(numb_hit(household, usermessage), numb_hit(health, usermessage), numb_hit(car, usermessage))
numb_hit(household, usermessage)
numb_hit(car, usermessage)
numb_hit(health, usermessage)
classification <- class[which( hits ==  max_hit)]
if (-2 < diff(hits) && diff(hits) < 2){
print("Others")
} else {
print(classification)
}
usermessage <- text[3]
## Anzahl Treffer ##
hits <- c(numb_hit(household, usermessage),numb_hit(car, usermessage), numb_hit(health, usermessage))
max_hit <- max(numb_hit(household, usermessage), numb_hit(health, usermessage), numb_hit(car, usermessage))
numb_hit(household, usermessage)
numb_hit(car, usermessage)
numb_hit(health, usermessage)
classification <- class[which( hits ==  max_hit)]
if (-2 < diff(hits) && diff(hits) < 2){
print("Others")
} else {
print(classification)
}
usermessage <- "My policy number is 123456789. I watched the poilce parking at chrismas"
## Anzahl Treffer ##
hits <- c(numb_hit(household, usermessage),numb_hit(car, usermessage), numb_hit(health, usermessage))
max_hit <- max(numb_hit(household, usermessage), numb_hit(health, usermessage), numb_hit(car, usermessage))
numb_hit(household, usermessage)
numb_hit(car, usermessage)
numb_hit(health, usermessage)
classification <- class[which( hits ==  max_hit)]
if (-2 < diff(hits) && diff(hits) < 2){
print("Others")
} else {
print(classification)
}
usermessage <- "My policy number is 123456789. I watched the poilce parking at chrismas at a wrong parking lot"
## Anzahl Treffer ##
hits <- c(numb_hit(household, usermessage),numb_hit(car, usermessage), numb_hit(health, usermessage))
max_hit <- max(numb_hit(household, usermessage), numb_hit(health, usermessage), numb_hit(car, usermessage))
numb_hit(household, usermessage)
numb_hit(car, usermessage)
numb_hit(health, usermessage)
classification <- class[which( hits ==  max_hit)]
if (-2 < diff(hits) && diff(hits) < 2){
print("Others")
} else {
print(classification)
}
shiny::runApp('~/02_Projekte/03_FWD/Show-Case/FWD_test')
runApp('~/02_Projekte/03_FWD/Show-Case/FWD_test')
runApp('~/02_Projekte/03_FWD/Show-Case/FWD_test')
runApp('~/02_Projekte/03_FWD/Show-Case/FWD_test')
runApp('~/02_Projekte/03_FWD/Show-Case/FWD_test')
runApp('~/02_Projekte/03_FWD/Show-Case/FWD_test')
runApp('~/02_Projekte/03_FWD/Show-Case/FWD_test')
runApp('~/02_Projekte/03_FWD/Show-Case/FWD_test')
runApp('~/02_Projekte/03_FWD/Show-Case/FWD_test')
runApp('~/02_Projekte/03_FWD/Show-Case/FWD_test')
runApp()
runApp('~/02_Projekte/03_FWD/Show-Case/FWD_test')
runApp('~/02_Projekte/03_FWD/Show-Case/FWD_test')
runApp('~/02_Projekte/03_FWD/Show-Case/FWD_test')
runApp('~/02_Projekte/03_FWD/Show-Case/FWD_test')
runApp('~/02_Projekte/03_FWD/Show-Case/FWD_test')
runApp('~/02_Projekte/03_FWD/Show-Case/FWD_test')
runApp('~/02_Projekte/03_FWD/Show-Case/FWD_test')
runApp('~/02_Projekte/03_FWD/Show-Case/FWD_test')
setwd("~/02_Projekte/03_FWD/Show-Case/Chatbot/App v2")
runApp()
