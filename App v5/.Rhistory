shiny::runApp()
shiny::runApp()
runApp()
input <- "health health
arm"
input <- "health health arm"
# for hit prediction
vec_hit <- function(param.class, param.usermessage){
vector <- sapply(param.class, grepl, param.usermessage)
param.usermessage <- strsplit(param.usermessage, split=' ')[[1]]
for (i in 1: length(param.class)){
quantity <- grep(param.class[i], param.usermessage)
if (vector[i] == TRUE){
vector[i] <- length(quantity)
} else {
vector[i] <- 0
}
}
return(vector)
}
numb_hit <- function(param.class, param.usermessage){
return(sum(vec_hit(param.class, param.usermessage)))
}
# PREDICTION: number of hits
prediction_hits <- function(input){
hits <- c(numb_hit(household, input), numb_hit(car, input), numb_hit(health, input))
max_hit <- max(numb_hit(household, input), numb_hit(car, input), numb_hit(health, input))
numb_hit(household, input)
numb_hit(car, input)
numb_hit(health, input)
classification <- classification_class[which( hits ==  max_hit)]
class_result <- if ( max(hits) > 2 ){
if (max(abs(diff(hits))) > 1){
if (max(abs(diff(hits))) == min(abs(diff(hits)))){
classification
}
else { hits_sort <- sort(hits)
if (abs(diff(hits_sort)[2]) > 1){
if (length(classification) == 1){
classification
} else {
"Others"
}
} else {
"Others"
}
}
} else {
"Others"
}
} else {
"Others"
}
return(class_result)
}
prediction_hits(input )
classification_class <- c("Household", "Car", "Health", "Others")
prediction_hits(input )
numb_hit(household, input)
numb_hit(car, input)
numb_hit(health, input)
input <- "health health health"
numb_hit(household, input)
numb_hit(health, input)
numb_hit(car, input)
runApp()
lower_usermessage <- tolower(input)
lower_usermessage
rmpunct_usermessage <- tm::removePunctuation(lower_usermessage)
rmpunct_usermessage
final_usermessage <- tm::removeWords(rmpunct_usermessage, stopwords("english"))
final_usermessage
class_result <- prediction_hits(final_usermessage)
class_result
if (class_result == classification_class[1]){
updateTextInput(session, inputId = "policynumber1",  value = policy(input))
updateTextInput(session, inputId = "first1",  value = first_split(input$user))
updateTextInput(session, inputId = "last1", value = last_split(input$user))
updateTextInput(session, inputId = "phone1",  value = phone(input$user))
if (!is.na(first_split(input$user)) == TRUE && !is.na(last_split(input$user)) == TRUE ){
updateTextInput(session, inputId = "email1",  value = paste0(first_split(input$user),last_split(input$user), "@company.com"))
} else {
updateTextInput(session, inputId = "email1",  value = "")
}
} else {
if (class_result == classification_class[2]){
updateTextInput(session, inputId = "policynumber2",  value = policy(input$user))
updateTextInput(session, inputId = "first2",  value = first_split(input$user))
updateTextInput(session, inputId = "last2", value = last_split(input$user))
updateTextInput(session, inputId = "phone2",  value = phone(input$user))
if (!is.na(first_split(input$user)) == TRUE && !is.na(last_split(input$user)) == TRUE ){
updateTextInput(session, inputId = "email2",  value = paste0(first_split(input$user),last_split(input$user), "@company.com"))
} else {
updateTextInput(session, inputId = "email2",  value = "")
}
} else {
if (class_result == classification_class[3]) {
updateTextInput(session, inputId = "policynumber3",  value = policy(input$user))
updateTextInput(session, inputId = "first3",  value = first_split(input$user))
updateTextInput(session, inputId = "last3", value = last_split(input$user))
updateTextInput(session, inputId = "phone3",  value = phone(input$user))
if (!is.na(first_split(input$user)) == TRUE && !is.na(last_split(input$user)) == TRUE ){
updateTextInput(session, inputId = "email3",  value = paste0(first_split(input),last_split(input), "@company.com"))
} else {
updateTextInput(session, inputId = "email3",  value = "")
}
} else {
updateTextInput(session, inputId = "policynumber4",  value = policy(input))
updateTextInput(session, inputId = "first4",  value = first_split(input))
updateTextInput(session, inputId = "last4", value = last_split(input))
updateTextInput(session, inputId = "phone4",  value = phone(input))
if (!is.na(first_split(input$user)) == TRUE && !is.na(last_split(input)) == TRUE ){
updateTextInput(session, inputId = "email4",  value = paste0(first_split(input),last_split(input), "@company.com"))
} else {
updateTextInput(session, inputId = "email4",  value = "")
}
}
}
}
class_result
runApp()
